{"version":3,"sources":["FlashCard.js","FlashCardList.js","App.js","index.js"],"names":["FlashCard","props","flashcard","useState","flip","setFlip","height","setHeight","color","setColor","score","setScore","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","handleClick","event","target","innerText","answer","prevScore","currentScore","useEffect","question","options","window","addEventListener","removeEventListener","className","style","boxShadow","ref","map","option","onClick","FlashCardList","flashcards","id","App","setFlashcard","categories","setCategories","categoryEl","amountEl","deCodeString","str","textArea","document","createElement","innerHTML","value","axios","get","then","res","data","trivia_categories","onSubmit","e","preventDefault","params","amount","category","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","random","htmlFor","name","htmlfor","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ab157166.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef} from 'react'\n\nexport default function FlashCard( { flashcard }, props ) {\n    const [flip, setFlip] = useState(false)\n    const [height, setHeight] = useState('initial')\n    const [color, setColor] = useState('')\n    let [score, setScore] = useState(0)\n    const frontEl = useRef()\n    const backEl = useRef()\n\n    function setMaxHeight() {\n        const frontHeight = frontEl.current.getBoundingClientRect().height\n        const backHeight = backEl.current.getBoundingClientRect().height\n        setHeight(Math.max(frontHeight, backHeight, 100)) \n    };\n\n    useEffect(() => {\n        setMaxHeight()\n    }, [flashcard.question, flashcard.answer, flashcard.options])\n\n    useEffect(() => {\n        window.addEventListener('resize', setMaxHeight)\n        return () => window.removeEventListener('resize', setMaxHeight)\n    }, [])\n\n    function handleClick(event) {\n        setFlip(!flip)\n        if (event.target.innerText === flashcard.answer){\n            setColor('0 0 5px 2px rgba(1, 152, 117, 0.3)')\n            setScore(prevScore => prevScore +1)\n            props.currentScore(score)\n        } else {\n            setColor('0 0 5px 2px rgba(255, 0, 0 , 0.3)')\n        }\n    }\n\n    return (\n        <div className= {`card ${flip ? 'flip' : ''}`} \n             style = {{ height: height, boxShadow: color }}>\n            <div className='front' ref = {frontEl} >\n                {flashcard.question}\n                <div className='options'>\n                    {flashcard.options.map(option => { \n                        return <div className = 'flashcard-option'\n                                key = {option}\n                                onClick ={handleClick}>{option}\n                            </div>})}\n                </div>\n            </div>\n            <div className='back' ref = {backEl}> {flashcard.answer} {score} </div>\n        </div>\n    )\n}\n ","import React from 'react'\nimport FlashCard from './FlashCard'\n\nexport default function FlashCardList( {flashcards }) {\n    return (\n        <div className='card-grid'>\n            {flashcards.map( flashcard => {\n                return <FlashCard flashcard = {flashcard} key = {flashcard.id} />\n                 })}\n        </div>\n    )\n}\n ","import React,  { useState, useEffect, useRef } from 'react'\nimport FlashCardList from './FlashCardList';\nimport FlashCard from './FlashCard'\nimport './app.css'\nimport axios from 'axios'\n\nfunction App() { \n  const [flashcards, setFlashcard] = useState([])\n  const [categories, setCategories] = useState([])\n  const categoryEl = useRef()\n  const amountEl = useRef()\n\n  useEffect(() => {\n    axios.get('https://opentdb.com/api_category.php')\n    .then(res => {\n      setCategories(res.data.trivia_categories)\n    })\n  }, [])\n\n  function deCodeString (str) {\n    const textArea = document.createElement('textarea')\n    textArea.innerHTML = str\n    return textArea.value\n  }\n\n  function handleSubmit(e){\n    e.preventDefault();\n    axios.get('https://opentdb.com/api.php', {\n      params: {\n        amount: amountEl.current.value,\n        category: categoryEl.current.value\n      }\n    })\n    .then(res => {\n      setFlashcard(res.data.results.map((questionItem, index) => {\n        const answer = deCodeString(questionItem.correct_answer)\n        const options = [\n            ...questionItem.incorrect_answers.map(a => deCodeString(a)), \n              answer]\n        return {\n          id: `${index}-${Date.now()}`,\n          question: deCodeString(questionItem.question),\n          answer: answer,\n          options: options.sort(() => Math.random() - .5)\n        }\n      } ))\n    })\n  }\n\n  return (\n    <>\n      <h1> {FlashCard.score} </h1>\n      <form className='header' onSubmit = {handleSubmit}>\n        <div className = 'form-group'>\n          <label htmlFor='category'>Category</label>\n          <select id='category' ref={categoryEl}>\n            {categories.map(category => {\n              return <option value={category.id} key={category.id}>{category.name}</option>\n            })}\n          </select>\n        </div>\n        <div className='form-group'>\n          <label htmlfor = \"amount\">Number of Questions?</label>\n          <input type='number' id='amount' min='1' step = '1' defaultValue='10' ref = {amountEl} />\n        </div>\n        <div className = 'form-group'>\n          <button className = 'button'>Generate</button>\n        </div>\n      </form>\n      <div className=\"container\">\n        <FlashCardList flashcards = {flashcards} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}